"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=Symbol.for("relationtree_children_Symbol"),e="background: #6a4313;color: white;font-size:10px;font-family: monospace;border:1px solid #6a4313;border-radius: 5px",t="%c üê¶Error from Spurv: ",n=function(r,o){void 0===o&&(o={levels:Number.POSITIVE_INFINITY});var i=o.levels?Number(o.levels):0;return Array.isArray(r)?0===i?r:r.reduce((function(r,e){return Array.isArray(e)?r.concat(n(e,{levels:i-1})):r.concat(e)}),[]):(console.log(t,e,"flatten accepts an array","and safe answer '[]' returned"),[])},o=function(e,t){if(!(Array.isArray(e)&&t&&t.id&&t.parentId))throw new Error("relationtree must have two arguments: data:[] and options:{root,id,parentId}");var n=[];try{var i=e.filter((function(r,e){if(r[t.parentId]===t.root)return n.push(e),r[t.parentId]===t.root}));if(0===i.length)return;for(var u=0,a=n.length;u<a;u++)e.slice(u,1);return i.forEach((function(n){n[r]=o(e,{root:n[t.id],id:t.id,parentId:t.parentId})})),i}catch(r){throw new Error("relationtree must have two arguments: data:[] and options:{root,id,parentId}, they will be used to build the tree")}},i=function(r){if(this._items={},this._length=0,r){if("object"!=typeof r)throw new TypeError("Spurv: initial data must be an object");for(var e in r)this.add(e,r[e])}},u={length:{configurable:!0}};u.length.get=function(){return this._length},i.prototype._getKeyAsString=function(r){if(void 0===r)throw new TypeError("Spurv: key is undefined");return"object"==typeof r?JSON.stringify(r):r.toString()},i.prototype.add=function(r,e){var t=this._getKeyAsString(r);t in this._items||this._length++,this._items[t]=e},i.prototype.clear=function(){this._items={},this._length=0},i.prototype.containsKey=function(r){var e=this._getKeyAsString(r);return Object.keys(this._items).includes(e)},i.prototype.containsValue=function(r){var e=this._getKeyAsString(r);return Object.values(this._items).includes(e)},i.prototype.get=function(r){var e=this._getKeyAsString(r);return this._items[e]||void 0},i.prototype.remove=function(r){var e=this._getKeyAsString(r);e in this._items&&this._length--,delete this._items[e]},i.prototype.keys=function(){return Object.keys(this._items)},i.prototype.entries=function(){return Object.entries(this._items)},i.prototype.values=function(){return Object.values(this._items)},Object.defineProperties(i.prototype,u);exports.bstree=function(r){var n=function(r){var e=Object.create(null);return Object.assign(e,{val:r,left:null,right:null})},o=function(r,n){if(n.val<r.val)null===r.left?r.left=n:o(r.left,n);else{if(!(n.val>r.val))return void console.log(t,e,"you passed a duplicate value to binary search tree, Spurv ignored it");null===r.right?r.right=n:o(r.right,n)}},i=null;return Number.isNaN(Number(r))||(i=n(Number(r))),{insert:function(r){if(null===i)return i=n(r);var e=n(r);return o(i,e),i},getHead:function(){return i}}},exports.compose=function(){for(var r=[],n=arguments.length;n--;)r[n]=arguments[n];return function(n){return r.reduce((function(r,n){"function"==typeof n&&1===n.length||console.log(t,e,"compose accepts pure function(s) which needs only 1 argument");try{return n(r)}catch(r){console.log(t,e,r)}}),n)}},exports.deserialize=function(r){if(null===r)return null;var n=function(r){var e=Object.create(null);return Object.assign(e,{val:r,left:null,right:null})},o=function(r){return"null"===r||void 0===r?null:n(Number(r))},i=[];try{var u=r.slice(1,-1).split(","),a=u.shift();if("null"===a)return null;var s=n(Number(a));for(i.push(s);i.length;)for(var l=i.length,c=0;c<l;c++){var f=i.shift();if(f){var p=o(u.shift()),h=o(u.shift());f.left=p,f.right=h,null!==p&&i.push(p),null!==h&&i.push(h)}}return s}catch(r){console.log(t,e,"make sure you provided a valid serialized string to function deserialize"),console.log(r)}},exports.dictionary=function(r){return new i(r)},exports.factorial=function(r){if(isNaN(r)||r<0||r>170)return console.log(t,e,"number 'n'(0 <= n <= 170) expected","and safe answer '1' returned"),1;if(0===r)return 1;if(r<=99){for(var n=1,o=1;o<=r;o++)n*=o;return n}if(r>99){for(var i=BigInt(1),u=1;u<=r;u++)i*=BigInt(u);return Number(i)}},exports.flatten=n,exports.intersect=function(){for(var r=[],o=arguments.length;o--;)r[o]=arguments[o];if(0===r.length)return[null];var i=r.reduce((function(r,n){return Array.isArray(r)&&Array.isArray(n)?r.filter((function(r){return n.includes(r)})):(console.log(t,e,"Array<number> expected","and safe answer '[]' returned"),[])}));return Array.from(new Set(n(i)))},exports.relationtree=o,exports.rtchildren=r,exports.serialize=function(r){if(null===r)return null;var n=[],o=[];o.push(r);try{for(;o.length;)for(var i=o.length,u=0;u<i;u++){var a=o.shift();null!==a?(n.push(a.val),o.push(a.left),o.push(a.right)):n.push("null")}for(;"null"===n[n.length-1];)n.pop();return"["+n.toString()+"]"}catch(r){console.log(t,e,"make sure you pass a binary tree to function serialize"),console.log(r)}},exports.sortarrayby=function(r,e){void 0===e&&(e={tar:[],rev:!1}),e.tar||(e.tar=[]);if(!Array.isArray(r))throw new TypeError("make sure you passed an array");if(Array.isArray(e.tar))return 0===e.tar.length?r.sort((function(r,t,n){return void 0===n&&(n=e.rev),n?r<t?1:r>t?-1:0:r<t?-1:r>t?1:0})):r.sort((function(r,t,n){void 0===n&&(n=e.rev);var o=e.tar,i=function(r){return o.reduce((function(r,e){return r[e]}),r)},u=i(r),a=i(t);return n?u<a?1:u>a?-1:0:u<a?-1:u>a?1:0}))},exports.union=function(){for(var r=[],o=arguments.length;o--;)r[o]=arguments[o];if(0===r.length)return[null];var i=r.map((function(r){return Array.isArray(r)?r:(console.log(t,e,"Array<number> expected","and safe answer '[]' returned"),[])}));return Array.from(new Set(n(i)))};
