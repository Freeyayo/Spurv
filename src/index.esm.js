var r=Symbol.for("relationtree_children_Symbol"),t="background: #6a4313;color: white;font-size:10px;font-family: monospace;border:1px solid #6a4313;border-radius: 5px",e="%c üê¶Error from Spurv: ",n=function(){for(var r=[],n=arguments.length;n--;)r[n]=arguments[n];return function(n){return r.reduce((function(r,n){"function"==typeof n&&1===n.length||console.log(e,t,"compose accepts pure function(s) which needs only 1 argument");try{return n(r)}catch(r){console.log(e,t,r)}}),n)}},i=function(r){if(null===r)return null;var n=function(r){var t=Object.create(null);return Object.assign(t,{val:r,left:null,right:null})},i=function(r){return"null"===r||void 0===r?null:n(Number(r))},o=[];try{var u=r.slice(1,-1).split(","),a=u.shift();if("null"===a)return null;var l=n(Number(a));for(o.push(l);o.length;)for(var s=o.length,c=0;c<s;c++){var f=o.shift();if(f){var h=i(u.shift()),p=i(u.shift());f.left=h,f.right=p,null!==h&&o.push(h),null!==p&&o.push(p)}}return l}catch(r){console.log(e,t,"make sure you provided a valid serialized string to function deserialize"),console.log(r)}},o=function(r,n){void 0===n&&(n={levels:Number.POSITIVE_INFINITY});var i=n.levels?Number(n.levels):0;return Array.isArray(r)?0===i?r:r.reduce((function(r,t){return Array.isArray(t)?r.concat(o(t,{levels:i-1})):r.concat(t)}),[]):(console.log(e,t,"flatten accepts an array","and safe answer '[]' returned"),[])},u=function(t,e){if(!(Array.isArray(t)&&e&&e.id&&e.parentId))throw new Error("relationtree must have two arguments: data:[] and options:{root,id,parentId}");var n=[];try{var i=t.filter((function(r,t){if(r[e.parentId]===e.root)return n.push(t),r[e.parentId]===e.root}));if(0===i.length)return;for(var o=0,a=n.length;o<a;o++)t.slice(o,1);return i.forEach((function(n){n[r]=u(t,{root:n[e.id],id:e.id,parentId:e.parentId})})),i}catch(r){throw new Error("relationtree must have two arguments: data:[] and options:{root,id,parentId}, they will be used to build the tree")}},a=function(r){if(null===r)return null;var n=[],i=[];i.push(r);try{for(;i.length;)for(var o=i.length,u=0;u<o;u++){var a=i.shift();null!==a?(n.push(a.val),i.push(a.left),i.push(a.right)):n.push("null")}for(;"null"===n[n.length-1];)n.pop();return"["+n.toString()+"]"}catch(r){console.log(e,t,"make sure you pass a binary tree to function serialize"),console.log(r)}},l=function(r,t){void 0===t&&(t={tar:[],rev:!1}),t.tar||(t.tar=[]);if(!Array.isArray(r))throw new TypeError("make sure you passed an array");if(Array.isArray(t.tar))return 0===t.tar.length?r.sort((function(r,e,n){return void 0===n&&(n=t.rev),n?r<e?1:r>e?-1:0:r<e?-1:r>e?1:0})):r.sort((function(r,e,n){void 0===n&&(n=t.rev);var i=t.tar,o=function(r){return i.reduce((function(r,t){return r[t]}),r)},u=o(r),a=o(e);return n?u<a?1:u>a?-1:0:u<a?-1:u>a?1:0}))},s=function(r){if(isNaN(r)||r<0||r>170)return console.log(e,t,"number 'n'(0 <= n <= 170) expected","and safe answer '1' returned"),1;if(0===r)return 1;if(r<=99){for(var n=1,i=1;i<=r;i++)n*=i;return n}if(r>99){for(var o=BigInt(1),u=1;u<=r;u++)o*=BigInt(u);return Number(o)}},c=function(){for(var r=[],n=arguments.length;n--;)r[n]=arguments[n];if(0===r.length)return[null];var i=r.reduce((function(r,n){return Array.isArray(r)&&Array.isArray(n)?r.filter((function(r){return n.includes(r)})):(console.log(e,t,"Array<number> expected","and safe answer '[]' returned"),[])}));return Array.from(new Set(o(i)))},f=function(){for(var r=[],n=arguments.length;n--;)r[n]=arguments[n];if(0===r.length)return[null];var i=r.map((function(r){return Array.isArray(r)?r:(console.log(e,t,"Array<number> expected","and safe answer '[]' returned"),[])}));return Array.from(new Set(o(i)))},h=function(r){var n=function(r){var t=Object.create(null);return Object.assign(t,{val:r,left:null,right:null})},i=function(r,n){if(n.val<r.val)null===r.left?r.left=n:i(r.left,n);else{if(!(n.val>r.val))return void console.log(e,t,"you passed a duplicate value to binary search tree, Spurv ignored it");null===r.right?r.right=n:i(r.right,n)}},o=null;return Number.isNaN(Number(r))||(o=n(Number(r))),{insert:function(r){if(null===o)return o=n(r);var t=n(r);return i(o,t),o},getHead:function(){return o}}},p=function(r){if(this._items={},this._length=0,r){if("object"!=typeof r)throw new TypeError("Spurv: initial data must be an object");for(var t in r)this.add(t,r[t])}},d={length:{configurable:!0}};d.length.get=function(){return this._length},p.prototype._getKeyAsString=function(r){if(void 0===r)throw new TypeError("Spurv: key is undefined");return"object"==typeof r?JSON.stringify(r):r.toString()},p.prototype.add=function(r,t){var e=this._getKeyAsString(r);e in this._items||this._length++,this._items[e]=t},p.prototype.clear=function(){this._items={},this._length=0},p.prototype.containsKey=function(r){var t=this._getKeyAsString(r);return Object.keys(this._items).includes(t)},p.prototype.containsValue=function(r){var t=this._getKeyAsString(r);return Object.values(this._items).includes(t)},p.prototype.get=function(r){var t=this._getKeyAsString(r);return this._items[t]||void 0},p.prototype.remove=function(r){var t=this._getKeyAsString(r);t in this._items&&this._length--,delete this._items[t]},p.prototype.keys=function(){return Object.keys(this._items)},p.prototype.entries=function(){return Object.entries(this._items)},p.prototype.values=function(){return Object.values(this._items)},Object.defineProperties(p.prototype,d);var g=function(r){return new p(r)};export{h as bstree,n as compose,i as deserialize,g as dictionary,s as factorial,o as flatten,c as intersect,u as relationtree,r as rtchildren,a as serialize,l as sortarrayby,f as union};
